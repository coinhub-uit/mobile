name: Build

on:
  workflow_dispatch:
  push:
    paths:
      - lib/**
      - assets/**
      - pubspec.yaml
      - pubspec.lock
      - android/**
      - ios/**

env:
  FLUTTER_VERSION: 3.29.x
  FLUTTER_CHANNEL: stable
  DART_DEFINE_ARGS: >
    --dart-define API_SERVER_URL=${{ secrets.API_SERVER_URL }}
    --dart-define SUPABASE_URL=${{ secrets.SUPABASE_URL }}
    --dart-define SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
    --dart-define OAUTH_GOOGLE_WEB_CLIENT_ID=${{ secrets.OAUTH_GOOGLE_WEB_CLIENT_ID }}
    --dart-define OAUTH_GOOGLE_IOS_CLIENT_ID=${{ secrets.OAUTH_GOOGLE_IOS_CLIENT_ID }}

jobs:
  build-apk:
    runs-on: ubuntu-latest
    name: Build APK (${{ matrix.target }})
    strategy:
      fail-fast: false
      matrix:
        target:
          - arm
          - arm64
          # - x86 # Cannot build for x86 anymore...
          - x64
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-sa-private-key.json
    steps:
      - uses: actions/checkout@v4

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Install dependencies
        run: flutter pub get
      #
      - name: Get GCP_SA
        run: echo '${{ secrets.GCP_SA_PRIVATE_KEY }}' > '${{ env.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: Get Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Setup firebase
        run: dart run flutterfire_cli:flutterfire configure --project='${{ vars.GCP_ID }}' --yes --platforms=android

      - name: Setup keystore
        shell: bash
        run: |
          echo '${{ secrets.ANDROID_RELEASE_KEY }}' | base64 --decode > app/keystore.jks
          {
            echo 'storeFile=keystore.jks'
            echo 'keyAlias=upload'
            echo 'storePassword=${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }}'
            echo 'keyPassword=${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }}'
          } > key.properties
        working-directory: android

      - name: Build apk
        run: flutter build apk --release --target-platform 'android-${{ matrix.target }}' ${{ env.DART_DEFINE_ARGS }}

      - name: Rename apk file
        working-directory: build/app/outputs/flutter-apk/
        run: mv 'app-release.apk' 'coinhub-${{ matrix.target }}.apk'

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coinhub-apk-${{ matrix.target }}
          path: build/app/outputs/flutter-apk/*

  build-ipa:
    runs-on: macos-latest
    name: Build IPA
    steps:
      - uses: actions/checkout@v4

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build unsign
        run: flutter build ipa --release --no-codesign ${{ env.DART_DEFINE_ARGS }}

      - name: Pack to unsign ipa
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications
        shell: bash
        run: |
          mkdir Payload
          mv Runner.app Payload/
          zip -qq -r -9 coinhub.ipa Payload

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coihub-ipa
          path: build/ios/archive/Runner.xcarchive/Products/Applications/*.ipa
